{
  "version": 3,
  "file": "/Users/AnimeCYC/Desktop/DestinyCTRL/assets/js/dist/main.js",
  "sources": [
    "vendor/almond.js",
    "common/utils.js",
    "common/api.js",
    "models/character.js",
    "models/item.js",
    "models/bucket.js",
    "models/vault.js",
    "models/account.js",
    "common/bungie.js",
    "DestinyCTRL.js",
    "main.js"
  ],
  "names": [],
  "mappingshbA,ADibA;AChbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA,AD2DA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"vendor/almond\", function(){});\n\n",
    "define('common/utils',[],function() {\n  function Util() {}\n\n  Util.getCookie = function(name) {\n    return new Promise(function(resolve, reject) {\n      if(window.hasOwnProperty('chrome') && chrome.hasOwnProperty('cookies')) {\n        chrome.cookies.get({\n          name : name,\n          url : 'https://www.bungie.net'\n        }, function(cookie) {\n          if(cookie) {\n            resolve(cookie.value);\n          } else {\n            reject();\n          }\n        }.bind(this));\n      }\n      else {\n        reject();\n      }\n    }.bind(this));\n  };\n\n  Util.logError = function(err) {\n    if(err instanceof Error) {\n      throw err;\n    } else {\n      console.error('Error[' + err.ErrorCode + '] -> \"' + err.Message + '\"');\n    }\n  };\n\n  return Util;\n});\n\n",
    "define('common/api',['common/utils'], function(Util) {\n  function API() {}\n\n  API.key = null;\n  API.base = 'https://www.bungie.net/Platform';\n\n  API.requestWithToken = function() {\n    var _self = this;\n    var _args = [].slice.call(arguments);\n\n    return new Promise(function(resolve, reject) {\n      Util.getCookie('bungled').then(function(csrfToken) {\n        var _deleteCSRF = function() {\n          delete _self._csrf;\n        };\n\n        _self._csrf = csrfToken;\n\n        API.request.apply(_self, _args)\n          .then(resolve)\n          .catch(reject)\n          .then(_deleteCSRF);\n      })\n    });\n  };\n\n  API.request = function(method, endpoint, params, payload) {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var raw = this.response;\n        var resp = JSON.parse(raw);\n\n        if (this.status >= 200 && this.status < 400) {\n          if(resp.ErrorCode > 1) {\n            reject(resp);\n          }\n          else {\n            resolve(resp.Response);\n          }\n        } else {\n          reject(resp);\n        }\n      };\n\n      xhr.onerror = function() {\n        var raw = this.response\n        var resp = JSON.parse(raw);\n\n        reject(resp);\n      };\n\n      var url = [\n        API.base.replace(/(\\/$)/, ''),\n        endpoint.replace(/(^\\/|\\/$)/, '')\n      ].join('/') + '/' + API.objectToQueryString(params || {});\n\n      xhr.open(method, url, true);\n\n      if(_self._csrf) {\n        xhr.withCredentials = true;\n\n        xhr.setRequestHeader('X-CSRF', _self._csrf);\n      }\n\n      xhr.setRequestHeader('X-API-Key', API.key);\n\n      xhr.send(payload);\n    });\n  };\n\n  API.objectToQueryString = function(obj) {\n    var params = [];\n\n    for(var key in obj) {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\n    }\n\n    return params ? '?' + params.join('&') : '';\n  };\n\n  return API;\n});\n\n",
    "define('models/character',['common/api'], function(API) {\n  function Character(account, data) {\n    this._account = account;\n\n    this.id = data.characterId;\n  }\n\n  Character.prototype.getGear = function() {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      API.request(\n        'GET',\n        '/Destiny/' + _self._account.type +\n        '/Account/' + _self._account.id +\n        '/Character/' + _self.id,\n        { definitions : true }\n      ).then(resolve).catch(reject);\n    });\n  };\n\n  Character.prototype.getInventory = function() {\n    //\n  };\n\n  return Character;\n});\n\n",
    "define('models/item',['models/bucket'], function(Bucket) {\n  function createStat(stat, meta) {\n    return {\n      name : meta.statName,\n      value : stat.value,\n      description : meta.statDescription,\n      icon : 'https://www.bungie.net/' + meta.icon.replace(/^\\//, '')\n    };\n  }\n\n  function Item(definitions, repo) {\n    var meta = definitions.items[repo.itemHash];\n\n    this.id = repo.itemHash;\n    this.name = meta.itemName;\n    this.type = meta.itemType;\n    this.typeName = meta.itemType;\n    this.description = meta.itemDescription;\n    this.icon = 'https://www.bungie.net/' + meta.icon.replace(/^\\//, '');\n    this.stats = {};\n    this.primaryStatId = null;\n    this.talentGrid = [];\n    this.tier = { type : meta.tierType, name : meta.tierName };\n\n    this._definitions = definitions;\n\n    this._fillBaseStats(repo.stats);\n    this._fillPrimaryStat(meta.primaryBaseStat);\n    this._fillTalentGrid(\n      repo.nodes,\n      definitions.talentGrids[meta.talentGridHash]\n    );\n\n    delete this._definitions;\n  }\n\n  Item.prototype._fillBaseStats = function(stats) {\n    stats.forEach(function(stat) {\n      var meta = this._definitions.stats[stat.statHash];\n\n      this.stats[meta.statIdentifier] = createStat(stat, meta);\n    }, this);\n  };\n\n  Item.prototype._fillPrimaryStat = function(stat) {\n    var meta = this._definitions.stats[stat.statHash];\n\n    this.primaryStatId = meta.statIdentifier;\n\n    this.stats[this.primaryStatId] = createStat(stat, meta);\n  };\n\n  Item.prototype._fillTalentGrid = function(itemNodes, talentGrid) {\n    itemNodes.map(function(node, idx) {\n      // The talentGrid maps 1:1 to an\n      // item's \"nodes\"; Thanks for the confusing\n      // definitions Bungie!\n\n      var talentNode = talentGrid.nodes[idx];\n      var step = talentNode.steps[node.stepIndex];\n\n      return {\n        name : step.nodeStepName,\n        description : step.nodeStepDescription,\n        icon : 'https://www.bungie.net/' + step.icon.replace(/^\\//, ''),\n        requirements : step.activationRequirement,\n        active : node.isActivated,\n\n        // We need the row-column data from the\n        // talentGridNode to properly build our\n        // items progression matrix, order isn't\n        // important (we sort that out later)\n\n        row : talentNode.row,\n        column : talentNode.column\n      };\n    }).forEach(function(node) {\n      // We only want rows and columns that\n      // are greater than 1, from what I can\n      // tell anything but that isn't used\n\n      if(node.row > -1 && node.column > -1) {\n        // Build our column-row matrix, again,\n        // not worrying about sort order as we\n        // will handle that later\n\n        if(! this.talentGrid.hasOwnProperty(node.column)) {\n          this.talentGrid[node.column] = [];\n        }\n\n        this.talentGrid[node.column].push(node);\n      }\n    }, this);\n\n    // Sort the row columns just in case\n    // we have them in the wrong order from\n    // the previous operations\n\n    this.talentGrid.forEach(function(column) {\n      column.sort(function(a, b) {\n        return a.row - b.row;\n      });\n    });\n  }\n\n  return Item;\n});\n\n",
    "define('models/bucket',['models/item'], function(Item) {\n  function Bucket(definitions, repo) {\n    var bucketMeta = definitions.buckets[repo.bucketHash];\n\n    this.name = bucketMeta.bucketName;\n    this.order = bucketMeta.bucketOrder;\n    this.description = bucketMeta.bucketDescription;\n    this.items = [];\n\n    for(var idx in repo.items) {\n      this.items.push(new Item(definitions, repo.items[idx]));\n    }\n  }\n\n  return Bucket;\n});\n\n",
    "define('models/vault',['models/bucket'], function(Bucket) {\n  function Vault(definitions, repo) {\n    this.buckets = [];\n\n    for(var idx in repo.buckets) {\n      this.buckets.push(new Bucket(definitions, repo.buckets[idx]));\n    }\n  }\n\n  return Vault;\n});\n\n",
    "define(\n  'models/account',['common/api', 'models/character', 'models/vault'],\n  function(API, Character, Vault) {\n    function Account(data) {\n      var _self = this;\n\n      this.id = data.userInfo.membershipId;\n      this.type = data.userInfo.membershipType;\n      this.lastPlayed = data.lastPlayed;\n      this.grimoire = data.grimoireScore;\n      this.avatar = 'https://www.bungie.net/' +\n        data.userInfo.iconPath.replace(/^\\//, '');\n      this.characters = data.characters.map(function(char) {\n        return new Character(_self, char);\n      });\n    }\n\n    Account.prototype.isXBL = function() {\n      return this.type === 1;\n    };\n\n    Account.prototype.isPSN = function() {\n      return this.type === 2;\n    };\n\n    Account.prototype.getCharacters = function() {\n      return this.characters;\n    };\n\n    Account.prototype.getVault = function() {\n      var _self = this;\n\n      return new Promise(function(resolve, reject) {\n        API.requestWithToken(\n          'GET',\n          '/Destiny/' + _self.type +\n          '/MyAccount/Vault',\n          { definitions : true }\n        ).then(function(resp) {\n          var vault = new Vault(resp.definitions, resp.data);\n\n          resolve(vault);\n        }).catch(reject);\n      });\n    }\n\n    return Account;\n  }\n);\n\n",
    "define('common/bungie',['common/utils', 'common/api', 'models/account'], function(Util, API, Account) {\n  function Bungie(apiKey, apiBase) {\n    if(apiKey) {\n      API.key = apiKey;\n    }\n\n    if(apiBase) {\n      API.base = apiBase;\n    }\n\n    this._accounts = [];\n    this._authed = false;\n  }\n\n  // Instance\n\n  Bungie.prototype.authorize = function() {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      API.requestWithToken('GET', '/User/GetBungieNetUser')\n        .then(function(user) {\n          var _type = -1;\n\n          if(user.hasOwnProperty('gamerTag')) {\n            _type = 1;\n          }\n          else if(user.hasOwnProperty('psnId')) {\n            _type = 2;\n          }\n          else {\n            throw new Error('Unknown user type.');\n          }\n\n          API.requestWithToken(\n            'GET',\n            '/User/GetBungieAccount/' +\n            user.user.membershipId + '/0'\n          ).then(function(user) {\n            _self._authed = true;\n\n            for(var accountIdx in user.destinyAccounts) {\n              _self._accounts\n                .push(new Account(user.destinyAccounts[accountIdx]));\n            }\n\n            resolve();\n          }).catch(reject);\n        }).catch(reject);\n    });\n  };\n\n  Bungie.prototype.getAccounts = function() {\n    return this._accounts;\n  };\n\n  return new Bungie();\n});\n\n",
    "define('DestinyCTRL',['common/bungie'], function(Bungie) {\n  function DestinyCTRL() {}\n\n  DestinyCTRL.initialize = function() {\n    var _self = this;\n\n    Bungie.authorize().then(function() {\n      var accounts = Bungie.getAccounts();\n\n      if(accounts.length) {\n        accounts[0].getVault().then(function(vault) {\n          console.log(vault);\n        });\n      }\n    }).catch(function(err) {\n      alert(err.Message);\n    });\n  };\n\n  return DestinyCTRL;\n});\n\n",
    "require(['common/utils', 'DestinyCTRL'], function(Util, DestinyCTRL) {\n  if(window.hasOwnProperty('chrome')) {\n    chrome.browserAction.onClicked.addListener(function() {\n      var index = chrome.extension.getURL('index.html');\n      var query = function(tabs) {\n        try {\n          if(tabs.length) {\n            chrome.tabs.update(tabs[0].id, {\n              active : true\n            });\n          } else {\n            chrome.tabs.create({\n              url : index\n            });\n          }\n        } catch(err)  {\n          Util.handleError(err);\n        }\n      };\n\n      try {\n        chrome.tabs.query({ url : index }, query);\n      } catch (err) {\n        Util.handleError(err);\n      }\n    });\n  } else {\n    throw new Error('Browser not supported');\n  }\n\n  DestinyCTRL.initialize();\n});\n\ndefine(\"main\", function(){});\n\n"
  ]
}