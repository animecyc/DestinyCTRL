{"version":3,"file":"main.js","sources":["vendor/almond.js","common/utils.js","common/api.js","models/character.js","models/item.js","models/bucket.js","models/vault.js","models/account.js","common/bungie.js","DestinyCTRL.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Util","getCookie","Promise","resolve","reject","window","chrome","cookies","get","url","cookie","bind","this","logError","err","console","error","ErrorCode","Message","API","key","base","requestWithToken","_self","_args","then","csrfToken","_deleteCSRF","_csrf","request","method","endpoint","params","payload","xhr","XMLHttpRequest","onload","raw","response","resp","JSON","parse","status","Response","onerror","objectToQueryString","open","withCredentials","setRequestHeader","send","encodeURIComponent","Character","account","data","_account","characterId","getGear","type","definitions","getInventory","createStat","stat","meta","statName","description","statDescription","icon","Item","repo","itemHash","itemName","itemType","typeName","itemDescription","stats","primaryStatId","talentGrid","talentGrids","talentGridHash","tier","tierType","tierName","idx","baseStats","baseStat","baseStatMeta","statHash","statIdentifier","primaryBaseStat","primaryBaseStatMeta","Bucket","bucketMeta","buckets","bucketHash","bucketName","order","bucketOrder","bucketDescription","items","item","itemMeta","Vault","Account","userInfo","membershipId","membershipType","lastPlayed","grimoire","grimoireScore","avatar","iconPath","characters","char","isXBL","isPSN","getCharacters","getVault","vault","Bungie","apiKey","apiBase","_accounts","_authed","authorize","user","_type","accountIdx","destinyAccounts","getAccounts","DestinyCTRL","initialize","alert","accounts","browserAction","onClicked","addListener","extension","getURL","query","tabs","update","active","create","handleError"],"mappings":"CAAA,WAUA,GAAAA,GAAAC,EAAAC,GACA,SAAAC,GAUA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAC,KAAAH,EAAAC,GAWA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAZ,GAAAA,EAAAa,MAAA,KACAC,EAAAC,EAAAD,IACAE,EAAAF,GAAAA,EAAA,QAGA,IAAAf,GAAA,MAAAA,EAAAkB,OAAA,GAIA,GAAAjB,EAAA,CAgBA,IAfAD,EAAAA,EAAAc,MAAA,KACAR,EAAAN,EAAAmB,OAAA,EAGAH,EAAAI,cAAAC,EAAAC,KAAAtB,EAAAM,MACAN,EAAAM,GAAAN,EAAAM,GAAAiB,QAAAF,EAAA,KAOArB,EAAAa,EAAAW,MAAA,EAAAX,EAAAM,OAAA,GAAAM,OAAAzB,GAGAU,EAAA,EAAAA,EAAAV,EAAAmB,OAAAT,GAAA,EAEA,GADAE,EAAAZ,EAAAU,GACA,MAAAE,EACAZ,EAAA0B,OAAAhB,EAAA,GACAA,GAAA,MACA,IAAA,OAAAE,EAAA,CACA,GAAA,IAAAF,IAAA,OAAAV,EAAA,IAAA,OAAAA,EAAA,IAOA,KACAU,GAAA,IACAV,EAAA0B,OAAAhB,EAAA,EAAA,GACAA,GAAA,GAMAV,EAAAA,EAAA2B,KAAA,SACA,KAAA3B,EAAA4B,QAAA,QAGA5B,EAAAA,EAAA6B,UAAA,GAKA,KAAAhB,GAAAI,IAAAF,EAAA,CAGA,IAFAb,EAAAF,EAAAc,MAAA,KAEAJ,EAAAR,EAAAiB,OAAAT,EAAA,EAAAA,GAAA,EAAA,CAGA,GAFAP,EAAAD,EAAAsB,MAAA,EAAAd,GAAAiB,KAAA,KAEAd,EAGA,IAAAF,EAAAE,EAAAM,OAAAR,EAAA,EAAAA,GAAA,EAKA,GAJAP,EAAAW,EAAAF,EAAAW,MAAA,EAAAb,GAAAgB,KAAA,MAIAvB,IACAA,EAAAA,EAAAD,IACA,CAEAE,EAAAD,EACAG,EAAAG,CACA,OAMA,GAAAL,EACA,OAMAG,GAAAS,GAAAA,EAAAd,KACAK,EAAAS,EAAAd,GACAM,EAAAC,IAIAL,GAAAG,IACAH,EAAAG,EACAD,EAAAE,GAGAJ,IACAH,EAAAwB,OAAA,EAAAnB,EAAAF,GACAL,EAAAE,EAAAyB,KAAA,MAIA,MAAA3B,GAGA,QAAA8B,GAAAC,EAAAC,GACA,MAAA,YAIA,GAAAC,GAAAC,EAAApC,KAAAqC,UAAA,EAQA,OAHA,gBAAAF,GAAA,IAAA,IAAAA,EAAAd,QACAc,EAAAG,KAAA,MAEAC,EAAAC,MAAA7C,EAAAwC,EAAAR,QAAAM,EAAAC,MAIA,QAAAO,GAAAR,GACA,MAAA,UAAA/B,GACA,MAAAD,GAAAC,EAAA+B,IAIA,QAAAS,GAAAC,GACA,MAAA,UAAAC,GACAC,EAAAF,GAAAC,GAIA,QAAAE,GAAA5C,GACA,GAAAN,EAAAmD,EAAA7C,GAAA,CACA,GAAAiC,GAAAY,EAAA7C,SACA6C,GAAA7C,GACA8C,EAAA9C,IAAA,EACA+C,EAAAT,MAAA7C,EAAAwC,GAGA,IAAAvC,EAAAiD,EAAA3C,KAAAN,EAAAoD,EAAA9C,GACA,KAAA,IAAAgD,OAAA,MAAAhD,EAEA,OAAA2C,GAAA3C,GAMA,QAAAiD,GAAAjD,GACA,GAAAkD,GACAC,EAAAnD,EAAAA,EAAA4B,QAAA,KAAA,EAKA,OAJAuB,GAAA,KACAD,EAAAlD,EAAA6B,UAAA,EAAAsB,GACAnD,EAAAA,EAAA6B,UAAAsB,EAAA,EAAAnD,EAAAmB,UAEA+B,EAAAlD,GA8CA,QAAAoD,GAAApD,GACA,MAAA,YACA,MAAAgB,IAAAA,EAAAA,QAAAA,EAAAA,OAAAhB,QA1OA,GAAA+C,GAAAV,EAAAgB,EAAAC,EACAX,KACAE,KACA7B,KACA8B,KACAjD,EAAA0D,OAAAC,UAAAC,eACAvB,KAAAV,MACAH,EAAA,OA2LAgC,GAAA,SAAArD,EAAA+B,GACA,GAAA2B,GACAC,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,EA2BA,OAzBA3D,GAAA2D,EAAA,GAEAT,IACAA,EAAAnD,EAAAmD,EAAAnB,GACA2B,EAAAd,EAAAM,IAIAA,EAEAlD,EADA0D,GAAAA,EAAA3D,UACA2D,EAAA3D,UAAAC,EAAAuC,EAAAR,IAEAhC,EAAAC,EAAA+B,IAGA/B,EAAAD,EAAAC,EAAA+B,GACA4B,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,GACA3D,EAAA2D,EAAA,GACAT,IACAQ,EAAAd,EAAAM,MAMAU,EAAAV,EAAAA,EAAA,IAAAlD,EAAAA,EACA6D,EAAA7D,EACA8D,GAAAZ,EACAa,EAAAL,IAUAJ,GACA/D,QAAA,SAAAS,GACA,MAAA8B,GAAA9B,IAEAgE,QAAA,SAAAhE,GACA,GAAAiE,GAAAtB,EAAA3C,EACA,OAAA,mBAAAiE,GACAA,EAEAtB,EAAA3C,OAGAkE,OAAA,SAAAlE,GACA,OACAmE,GAAAnE,EACAoE,IAAA,GACAJ,QAAArB,EAAA3C,GACAgB,OAAAoC,EAAApD,MAKA+C,EAAA,SAAA/C,EAAAqE,EAAAC,EAAAvC,GACA,GAAAwC,GAAA9B,EAAA+B,EAAAzD,EAAAL,EAGA+D,EAFAxC,KACAyC,QAAAJ,EAOA,IAHAvC,EAAAA,GAAA/B,EAGA,cAAA0E,GAAA,aAAAA,EAAA,CAKA,IADAL,GAAAA,EAAAlD,QAAAmD,EAAAnD,QAAA,UAAA,UAAA,UAAAkD,EACA3D,EAAA,EAAAA,EAAA2D,EAAAlD,OAAAT,GAAA,EAKA,GAJAK,EAAAsC,EAAAgB,EAAA3D,GAAAqB,GACAU,EAAA1B,EAAA6C,EAGA,YAAAnB,EACAR,EAAAvB,GAAA4C,EAAA/D,QAAAS,OACA,IAAA,YAAAyC,EAEAR,EAAAvB,GAAA4C,EAAAU,QAAAhE,GACAyE,GAAA,MACA,IAAA,WAAAhC,EAEA8B,EAAAtC,EAAAvB,GAAA4C,EAAAY,OAAAlE,OACA,IAAAN,EAAAiD,EAAAF,IACA/C,EAAAmD,EAAAJ,IACA/C,EAAAoD,EAAAL,GACAR,EAAAvB,GAAAkC,EAAAH,OACA,CAAA,IAAA1B,EAAAgD,EAIA,KAAA,IAAAf,OAAAhD,EAAA,YAAAyC,EAHA1B,GAAAgD,EAAAY,KAAA5D,EAAA8C,EAAA/B,EAAAC,GAAA,GAAAS,EAAAC,OACAR,EAAAvB,GAAAiC,EAAAF,GAMA+B,EAAAF,EAAAA,EAAAhC,MAAAK,EAAA3C,GAAAiC,GAAA2C,OAEA5E,IAIAuE,GAAAA,EAAAP,UAAAvE,GACA8E,EAAAP,UAAArB,EAAA3C,GACA2C,EAAA3C,GAAAuE,EAAAP,QACAQ,IAAA/E,GAAAgF,IAEA9B,EAAA3C,GAAAwE,QAGAxE,KAGA2C,EAAA3C,GAAAsE,IAIAhF,EAAAC,EAAA8C,EAAA,SAAAgC,EAAAC,EAAAvC,EAAAC,EAAA6C,GACA,GAAA,gBAAAR,GACA,MAAAf,GAAAe,GAEAf,EAAAe,GAAAC,GAMA1B,EAAAS,EAAAgB,EAAAC,GAAAV,EACA,KAAAS,EAAA3C,OAAA,CAMA,GAJAV,EAAAqD,EACArD,EAAAqD,MACAhC,EAAArB,EAAAqD,KAAArD,EAAAsD,WAEAA,EACA,MAGAA,GAAA5C,QAGA2C,EAAAC,EACAA,EAAAvC,EACAA,EAAA,MAEAsC,EAAA5E,EA6BA,MAxBA6E,GAAAA,GAAA,aAIA,kBAAAvC,KACAA,EAAAC,EACAA,EAAA6C,GAIA7C,EACAe,EAAAtD,EAAA4E,EAAAC,EAAAvC,GAQA+C,WAAA,WACA/B,EAAAtD,EAAA4E,EAAAC,EAAAvC,IACA,GAGAM,GAOAA,EAAArB,OAAA,SAAA+D,GACA,MAAA1C,GAAA0C,IAMAzF,EAAA0F,SAAArC,EAEAnD,EAAA,SAAAQ,EAAAqE,EAAAC,GACA,GAAA,gBAAAtE,GACA,KAAA,IAAAgD,OAAA,4DAIAqB,GAAA3C,SAIA4C,EAAAD,EACAA,MAGA3E,EAAAiD,EAAA3C,IAAAN,EAAAmD,EAAA7C,KACA6C,EAAA7C,IAAAA,EAAAqE,EAAAC,KAIA9E,EAAAyF,KACAC,QAAA,MAIA1F,EAAA,gBAAA,cAEAA,EAAA,kBAAA,WChbA,QAAA2F,MA8BA,MA5BAA,GAAAC,UAAA,SAAApF,GACA,MAAA,IAAAqF,SAAA,SAAAC,EAAAC,GACAC,OAAA/B,eAAA,WAAAgC,OAAAhC,eAAA,WACAgC,OAAAC,QAAAC,KACA3F,KAAAA,EACA4F,IAAA,0BACA,SAAAC,GACAA,EACAP,EAAAO,EAAAnD,OAEA6C,KAEAO,KAAAC,OAGAR,KAEAO,KAAAC,QAGAZ,EAAAa,SAAA,SAAAC,GACA,GAAAA,YAAAjD,OACA,KAAAiD,EAEAC,SAAAC,MAAA,SAAAF,EAAAG,UAAA,SAAAH,EAAAI,QAAA,MAIAlB,IC/BA3F,EDkCA,cAAA,gBAAA,SAAA2F,GCjCA,QAAAmB,MAmFA,MAjFAA,GAAAC,IAAA,KACAD,EAAAE,KAAA,kCAEAF,EAAAG,iBAAA,WACA,GAAAC,GAAAX,KACAY,KAAAnF,MAAA1B,KAAAqC,UAEA,OAAA,IAAAkD,SAAA,SAAAC,EAAAC,GACAJ,EAAAC,UAAA,WAAAwB,KAAA,SAAAC,GACA,GAAAC,GAAA,iBACAJ,GAAAK,MAGAL,GAAAK,MAAAF,EAEAP,EAAAU,QAAA1E,MAAAoE,EAAAC,GACAC,KAAAtB,GADAgB,SAEAf,GACAqB,KAAAE,QAKAR,EAAAU,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAV,GAAAX,IAEA,OAAA,IAAAV,SAAA,SAAAC,EAAAC,GACA,GAAA8B,GAAA,GAAAC,eAEAD,GAAAE,OAAA,WACA,GAAAC,GAAAzB,KAAA0B,SACAC,EAAAC,KAAAC,MAAAJ,EAEAzB,MAAA8B,QAAA,KAAA9B,KAAA8B,OAAA,IACAH,EAAAtB,UAAA,EACAb,EAAAmC,GAGApC,EAAAoC,EAAAI,UAGAvC,EAAAmC,IAIAL,EAAAU,QAAA,WACA,GAAAP,GAAAzB,KAAA0B,SACAC,EAAAC,KAAAC,MAAAJ,EAEAjC,GAAAmC,GAGA,IAAA9B,IACAU,EAAAE,KAAAjF,QAAA,QAAA,IACA2F,EAAA3F,QAAA,YAAA,KACAI,KAAA,KAAA,IAAA2E,EAAA0B,oBAAAb,MAEAE,GAAAY,KAAAhB,EAAArB,GAAA,GAEAc,EAAAK,QACAM,EAAAa,iBAAA,EAEAb,EAAAc,iBAAA,SAAAzB,EAAAK,QAGAM,EAAAc,iBAAA,YAAA7B,EAAAC,KAEAc,EAAAe,KAAAhB,MAIAd,EAAA0B,oBAAA,SAAArI,GACA,GAAAwH,KAEA,KAAA,GAAAZ,KAAA5G,GACAwH,EAAA/E,KAAAiG,mBAAA9B,GAAA,IAAA8B,mBAAA1I,EAAA4G,IAGA,OAAAY,GAAA,IAAAA,EAAAxF,KAAA,KAAA,IAGA2E,IAGA9G,ECvFA,oBAAA,cAAA,SAAA8G,GACA,QAAAgC,GAAAC,EAAAC,GACAzC,KAAA0C,SAAAF,EAEAxC,KAAA5B,GAAAqE,EAAAE,YAqBA,MAlBAJ,GAAA9E,UAAAmF,QAAA,WACA,GAAAjC,GAAAX,IAEA,OAAA,IAAAV,SAAA,SAAAC,EAAAC,GACAe,EAAAU,QACA,MACA,YAAAN,EAAA+B,SAAAG,KACA,YAAAlC,EAAA+B,SAAAtE,GACA,cAAAuC,EAAAvC,IACA0E,aAAA,IACAjC,KAAAtB,GANAgB,SAMAf,MAIA+C,EAAA9E,UAAAsF,aAAA,aAIAR,IAGA9I,EC5BA,eAAA,iBAAA,WACA,QAAAuJ,GAAAC,EAAAC,GACA,OACAjJ,KAAAiJ,EAAAC,SACAxG,MAAAsG,EAAAtG,MACAyG,YAAAF,EAAAG,gBACAC,KAAA,0BAAAJ,EAAAI,KAAA9H,QAAA,MAAA,KAIA,QAAA+H,GAAAT,EAAAU,GACAxD,KAAA5B,GAAAoF,EAAAC,SACAzD,KAAA/F,KAAAuJ,EAAAE,SACA1D,KAAA6C,KAAAW,EAAAG,SACA3D,KAAA4D,SAAAJ,EAAAG,SACA3D,KAAAoD,YAAAI,EAAAK,gBACA7D,KAAAsD,KAAA,0BAAAE,EAAAF,KAAA9H,QAAA,MAAA,IACAwE,KAAA8D,SACA9D,KAAA+D,cAAA,KACA/D,KAAAgE,WAAAlB,EAAAmB,YAAAT,EAAAU,gBACAlE,KAAAmE,MACAtB,KAAAW,EAAAY,SACAnK,KAAAuJ,EAAAa,SAGA,KAAA,GAAAC,KAAAd,GAAAe,UAAA,CACA,GAAAC,GAAAhB,EAAAe,UAAAD,GACAG,EAAA3B,EAAAgB,MAAAU,EAAAE,SAEA1E,MAAA8D,MAAAW,EAAAE,gBACA3B,EAAAwB,EAAAC,GAGA,GAAAG,GAAApB,EAAAoB,gBACAC,EAAA/B,EAAAgB,MAAAc,EAAAF,SAEA1E,MAAA+D,cAAAc,EAAAF,eAEA3E,KAAA8D,MAAA9D,KAAA+D,eACAf,EAAA4B,EAAAC,GAGA,MAAAtB,KAGA9J,EAAA,iBAAA,eAAA,SAAA8J,GC5CA,QAAAuB,GAAAhC,EAAAU,GACA,GAAAuB,GAAAjC,EAAAkC,QAAAxB,EAAAyB,WAEAjF,MAAA/F,KAAA8K,EAAAG,WACAlF,KAAAmF,MAAAJ,EAAAK,YACApF,KAAAoD,YAAA2B,EAAAM,kBACArF,KAAAsF,QAEA,KAAA,GAAAhB,KAAAd,GAAA8B,MAAA,CACA,GAAAC,GAAA/B,EAAA8B,MAAAhB,GACAkB,EAAA1C,EAAAwC,MAAAC,EAAA9B,SAEAzD,MAAAsF,MAAAjJ,KAAA,GAAAkH,GAAAT,EAAA0C,KAIA,MAAAV,KAGArL,ECpBA,gBAAA,iBAAA,SAAAqL,GACA,QAAAW,GAAA3C,EAAAU,GACA,IAAA,GAAAc,KAAAd,GAAAwB,QACA,GAAAF,GAAAhC,EAAAU,EAAAwB,QAAAV,IAIA,MAAAmB,KCPAhM,EDUA,kBAAA,aAAA,mBAAA,gBAAA,SAAA8G,EAAAgC,EAAAkD,GCTA,QAAAC,GAAAjD,GACA,GAAA9B,GAAAX,IAEAA,MAAA5B,GAAAqE,EAAAkD,SAAAC,aACA5F,KAAA6C,KAAAJ,EAAAkD,SAAAE,eACA7F,KAAA8F,WAAArD,EAAAqD,WACA9F,KAAA+F,SAAAtD,EAAAuD,cACAhG,KAAAiG,OAAA,0BAAAxD,EAAAkD,SAAAO,SAAA1K,QAAA,MAAA,IACAwE,KAAAmG,WAAA1D,EAAA0D,WAAAnL,IAAA,SAAAoL,GACA,MAAA,IAAA7D,GAAA5B,EAAAyF,KAiCA,MA7BAV,GAAAjI,UAAA4I,MAAA,WACA,MAAA,KAAArG,KAAA6C,MAGA6C,EAAAjI,UAAA6I,MAAA,WACA,MAAA,KAAAtG,KAAA6C,MAGA6C,EAAAjI,UAAA8I,cAAA,WACA,MAAAvG,MAAAmG,YAGAT,EAAAjI,UAAA+I,SAAA,WACA,GAAA7F,GAAAX,IAEA,OAAA,IAAAV,SAAA,SAAAC,EAAAC,GACAe,EAAAG,iBACA,MACA,YAAAC,EAAAkC,KACA,oBACAC,aAAA,IACAjC,KAAA,SAAAc,GACA,GAAA8E,GAAA,GAAAhB,GAAA9D,EAAAmB,YAAAnB,EAAAc,KAEAlD,GAAAkH,KARAlG,SASAf,MAIAkG,IC3CAjM,ED8CA,iBAAA,eAAA,aAAA,kBAAA,SAAA2F,EAAAmB,EAAAmF,GC7CA,QAAAgB,GAAAC,EAAAC,GACAD,IACApG,EAAAC,IAAAmG,GAGAC,IACArG,EAAAE,KAAAmG,GAGA5G,KAAA6G,aACA7G,KAAA8G,SAAA,EAiDA,MA5CAJ,GAAAjJ,UAAAsJ,UAAA,WACA,GAAApG,GAAAX,IAEA,OAAA,IAAAV,SAAA,SAAAC,EAAAC,GACAe,EAAAG,iBAAA,MAAA,0BACAG,KAAA,SAAAmG,GACA,GAAAC,GAAA,EAEA,IAAAD,EAAAtJ,eAAA,YACAuJ,EAAA,MAEA,CAAA,IAAAD,EAAAtJ,eAAA,SAIA,KAAA,IAAAT,OAAA,qBAHAgK,GAAA,EAMA1G,EAAAG,iBACA,MACA,0BAAAsG,EAAAA,KAAApB,aACA,MACA/E,KAAA,SAAAmG,GACArG,EAAAmG,SAAA,CAEA,KAAA,GAAAI,KAAAF,GAAAG,gBACAxG,EAAAkG,UACAxK,KAAA,GAAAqJ,GAAAsB,EAAAG,gBAAAD,IAGA3H,OAZAgB,SAaAf,KA3BAe,SA4BAf,MAIAkH,EAAAjJ,UAAA2J,YAAA,WACA,IAAApH,KAAA8G,QACA,KAAA,IAAA7J,OAAA,qBAGA,OAAA+C,MAAA6G,WAGA,GAAAH,KAGAjN,EAAA,eAAA,iBAAA,SAAAiN,GC9DA,QAAAW,MAgBA,MAdAA,GAAAC,WAAA,WAGAZ,EAAAK,YAAAL,SAAA,WACAa,MAAA,2BACA1G,KAAA,WACA,GAAA2G,GAAAd,EAAAU,aAEAI,GAAA,GAAAhB,WAAA3F,KAAA,iBAMAwG,IAGA7N,GCpBA,eAAA,eAAA,SAAA4F,EAAAiI,GACA,IAAA5H,OAAA/B,eAAA,UA0BA,KAAA,IAAAT,OAAA,wBAzBAyC,QAAA+H,cAAAC,UAAAC,YAAA,WACA,GAAAvK,GAAAsC,OAAAkI,UAAAC,OAAA,cACAC,EAAA,SAAAC,GACA,IACAA,EAAA3M,OACAsE,OAAAqI,KAAAC,OAAAD,EAAA,GAAA3J,IACA6J,QAAA,IAGAvI,OAAAqI,KAAAG,QACArI,IAAAzC,IAGA,MAAA8C,GACAd,EAAA+I,YAAAjI,IAIA,KACAR,OAAAqI,KAAAD,OAAAjI,IAAAzC,GAAA0K,GACA,MAAA5H,GACAd,EAAA+I,YAAAjI,MAOAmH,EAAAC,eAGA7N,EAAA,OAAA","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"vendor/almond\", function(){});\n\n","define('common/utils',[],function() {\n  function Util() {}\n\n  Util.getCookie = function(name) {\n    return new Promise(function(resolve, reject) {\n      if(window.hasOwnProperty('chrome') && chrome.hasOwnProperty('cookies')) {\n        chrome.cookies.get({\n          name : name,\n          url : 'https://www.bungie.net'\n        }, function(cookie) {\n          if(cookie) {\n            resolve(cookie.value);\n          } else {\n            reject();\n          }\n        }.bind(this));\n      }\n      else {\n        reject();\n      }\n    }.bind(this));\n  };\n\n  Util.logError = function(err) {\n    if(err instanceof Error) {\n      throw err;\n    } else {\n      console.error('Error[' + err.ErrorCode + '] -> \"' + err.Message + '\"');\n    }\n  };\n\n  return Util;\n});\n\n","define('common/api',['common/utils'], function(Util) {\n  function API() {}\n\n  API.key = null;\n  API.base = 'https://www.bungie.net/Platform';\n\n  API.requestWithToken = function() {\n    var _self = this;\n    var _args = [].slice.call(arguments);\n\n    return new Promise(function(resolve, reject) {\n      Util.getCookie('bungled').then(function(csrfToken) {\n        var _deleteCSRF = function() {\n          delete _self._csrf;\n        };\n\n        _self._csrf = csrfToken;\n\n        API.request.apply(_self, _args)\n          .then(resolve)\n          .catch(reject)\n          .then(_deleteCSRF);\n      })\n    });\n  };\n\n  API.request = function(method, endpoint, params, payload) {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var raw = this.response;\n        var resp = JSON.parse(raw);\n\n        if (this.status >= 200 && this.status < 400) {\n          if(resp.ErrorCode > 1) {\n            reject(resp);\n          }\n          else {\n            resolve(resp.Response);\n          }\n        } else {\n          reject(resp);\n        }\n      };\n\n      xhr.onerror = function() {\n        var raw = this.response\n        var resp = JSON.parse(raw);\n\n        reject(resp);\n      };\n\n      var url = [\n        API.base.replace(/(\\/$)/, ''),\n        endpoint.replace(/(^\\/|\\/$)/, '')\n      ].join('/') + '/' + API.objectToQueryString(params || {});\n\n      xhr.open(method, url, true);\n\n      if(_self._csrf) {\n        xhr.withCredentials = true;\n\n        xhr.setRequestHeader('X-CSRF', _self._csrf);\n      }\n\n      xhr.setRequestHeader('X-API-Key', API.key);\n\n      xhr.send(payload);\n    });\n  };\n\n  API.objectToQueryString = function(obj) {\n    var params = [];\n\n    for(var key in obj) {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\n    }\n\n    return params ? '?' + params.join('&') : '';\n  };\n\n  return API;\n});\n\n","define('models/character',['common/api'], function(API) {\n  function Character(account, data) {\n    this._account = account;\n\n    this.id = data.characterId;\n  }\n\n  Character.prototype.getGear = function() {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      API.request(\n        'GET',\n        '/Destiny/' + _self._account.type +\n        '/Account/' + _self._account.id +\n        '/Character/' + _self.id,\n        { definitions : true }\n      ).then(resolve).catch(reject);\n    });\n  };\n\n  Character.prototype.getInventory = function() {\n    //\n  };\n\n  return Character;\n});\n\n","define('models/item',['models/bucket'], function(Bucket) {\n  function createStat(stat, meta) {\n    return {\n      name : meta.statName,\n      value : stat.value,\n      description : meta.statDescription,\n      icon : 'https://www.bungie.net/' + meta.icon.replace(/^\\//, '')\n    };\n  }\n\n  function Item(definitions, repo) {\n    this.id = repo.itemHash;\n    this.name = repo.itemName;\n    this.type = repo.itemType;\n    this.typeName = repo.itemType;\n    this.description = repo.itemDescription;\n    this.icon = 'https://www.bungie.net/' + repo.icon.replace(/^\\//, '');\n    this.stats = {};\n    this.primaryStatId = null;\n    this.talentGrid = definitions.talentGrids[repo.talentGridHash];\n    this.tier = {\n      type : repo.tierType,\n      name : repo.tierName\n    };\n\n    for(var idx in repo.baseStats) {\n      var baseStat = repo.baseStats[idx];\n      var baseStatMeta = definitions.stats[baseStat.statHash];\n\n      this.stats[baseStatMeta.statIdentifier] =\n        createStat(baseStat, baseStatMeta);\n    }\n\n    var primaryBaseStat = repo.primaryBaseStat;\n    var primaryBaseStatMeta = definitions.stats[primaryBaseStat.statHash];\n\n    this.primaryStatId = primaryBaseStatMeta.statIdentifier;\n\n    this.stats[this.primaryStatId] =\n      createStat(primaryBaseStat, primaryBaseStatMeta);\n  }\n\n  return Item;\n});\n\n","define('models/bucket',['models/item'], function(Item) {\n  function Bucket(definitions, repo) {\n    var bucketMeta = definitions.buckets[repo.bucketHash];\n\n    this.name = bucketMeta.bucketName;\n    this.order = bucketMeta.bucketOrder;\n    this.description = bucketMeta.bucketDescription;\n    this.items = [];\n\n    for(var idx in repo.items) {\n      var item = repo.items[idx];\n      var itemMeta = definitions.items[item.itemHash];\n\n      this.items.push(new Item(definitions, itemMeta));\n    }\n  }\n\n  return Bucket;\n});\n\n","define('models/vault',['models/bucket'], function(Bucket) {\n  function Vault(definitions, repo) {\n    for(var idx in repo.buckets) {\n      new Bucket(definitions, repo.buckets[idx]);\n    }\n  }\n\n  return Vault;\n});\n\n","define('models/account',['common/api', 'models/character', 'models/vault'], function(API, Character, Vault) {\n  function Account(data) {\n    var _self = this;\n\n    this.id = data.userInfo.membershipId;\n    this.type = data.userInfo.membershipType;\n    this.lastPlayed = data.lastPlayed;\n    this.grimoire = data.grimoireScore;\n    this.avatar = 'https://www.bungie.net/' + data.userInfo.iconPath.replace(/^\\//, '');\n    this.characters = data.characters.map(function(char) {\n      return new Character(_self, char);\n    });\n  }\n\n  Account.prototype.isXBL = function() {\n    return this.type === 1;\n  };\n\n  Account.prototype.isPSN = function() {\n    return this.type === 2;\n  };\n\n  Account.prototype.getCharacters = function() {\n    return this.characters;\n  };\n\n  Account.prototype.getVault = function() {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      API.requestWithToken(\n        'GET',\n        '/Destiny/' + _self.type +\n        '/MyAccount/Vault',\n        { definitions : true }\n      ).then(function(resp) {\n        var vault = new Vault(resp.definitions, resp.data);\n\n        resolve(vault);\n      }).catch(reject);\n    });\n  }\n\n  return Account;\n});\n\n","define('common/bungie',['common/utils', 'common/api', 'models/account'], function(Util, API, Account) {\n  function Bungie(apiKey, apiBase) {\n    if(apiKey) {\n      API.key = apiKey;\n    }\n\n    if(apiBase) {\n      API.base = apiBase;\n    }\n\n    this._accounts = [];\n    this._authed = false;\n  }\n\n  // Instance\n\n  Bungie.prototype.authorize = function() {\n    var _self = this;\n\n    return new Promise(function(resolve, reject) {\n      API.requestWithToken('GET', '/User/GetBungieNetUser')\n        .then(function(user) {\n          var _type = -1;\n\n          if(user.hasOwnProperty('gamerTag')) {\n            _type = 1;\n          }\n          else if(user.hasOwnProperty('psnId')) {\n            _type = 2;\n          }\n          else {\n            throw new Error('Unknown user type.');\n          }\n\n          API.requestWithToken(\n            'GET',\n            '/User/GetBungieAccount/' + user.user.membershipId +\n            '/0'\n          ).then(function(user) {\n            _self._authed = true;\n\n            for(var accountIdx in user.destinyAccounts) {\n              _self._accounts\n                .push(new Account(user.destinyAccounts[accountIdx]));\n            }\n\n            resolve();\n          }).catch(reject);\n        }).catch(reject);\n    });\n  };\n\n  Bungie.prototype.getAccounts = function() {\n    if(! this._authed) {\n      throw new Error('Not authenticated.');\n    }\n\n    return this._accounts;\n  };\n\n  return new Bungie();\n});\n\n","define('DestinyCTRL',['common/bungie'], function(Bungie) {\n  function DestinyCTRL() {}\n\n  DestinyCTRL.initialize = function() {\n    var _self = this;\n\n    Bungie.authorize().catch(function() {\n      alert('You\\'re not logged in.');\n    }).then(function() {\n      var accounts = Bungie.getAccounts();\n\n      accounts[0].getVault().then(function(data) {\n        //\n      });\n    });\n  };\n\n  return DestinyCTRL;\n});\n\n","require(['common/utils', 'DestinyCTRL'], function(Util, DestinyCTRL) {\n  if(window.hasOwnProperty('chrome')) {\n    chrome.browserAction.onClicked.addListener(function() {\n      var index = chrome.extension.getURL('index.html');\n      var query = function(tabs) {\n        try {\n          if(tabs.length) {\n            chrome.tabs.update(tabs[0].id, {\n              active : true\n            });\n          } else {\n            chrome.tabs.create({\n              url : index\n            });\n          }\n        } catch(err)  {\n          Util.handleError(err);\n        }\n      };\n\n      try {\n        chrome.tabs.query({ url : index }, query);\n      } catch (err) {\n        Util.handleError(err);\n      }\n    });\n  } else {\n    throw new Error('Browser not supported');\n  }\n\n  DestinyCTRL.initialize();\n});\n\ndefine(\"main\", function(){});\n\n"]}